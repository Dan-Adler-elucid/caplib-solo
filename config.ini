; EVServer Configuration settings
; Server wide configuration settings are present here.
; Author: karthik.krishnan@elucidbio.com
; License: Use of this source code is governed by the LICENSE file
; ================================================================

; Directory where resouce files are stored; eg orientation cube icons
; or anything else that needs to be read in. This variable is sustituted
; at cmake configure time and stored in the build tree.
Resource_Path=/inst/adler/EVServer-Release-OnScreen/Resources/

; Directory where the root of the EVServer source tree is
EVServer_SOURCE_DIR=/inst/adler/EVServer/

; Directory where the root of the EVServer binary tree is
EVServer_BINARY_DIR=/inst/adler/EVServer-Release-OnScreen/

; encode the array before sending to client ?
; 0 = No encoding, 1 = base64
Streaming_Encode=0

; compress the stream before sending to the client ?
; 0 = No compression, 1 = PNG, 2 = JPEG
; Currently only 0 and 2 are supported, although 1 is on the cards.
Streaming_ImageCompression=1

; Per view temporal strategy for sending to the client ?
; Whole: Stream whole view each time -> No temporal differencing
; Delta: Stream difference of current and previous view (where possible)
; ROI:   Stream rectangular subregion that changed (where possible)
; -> where possible means, when the current frame size and the previous frame
; size are identical and a previous frame for the view exists.
Streaming_TemporalStrategy=Whole

; Determines if the server will render corner annotations and test.
; true to show, and false to hide.
Render_annotations=true

; True will make the display pipeline a bit slower since the texture needs to be recomputed if you
; change the camera (ie zoom and pan will be slower), but the texture will render at screen
; resolution and therefore the image will be crisper.
Render_ImageAtScreenResolution=true

; This setting makes sense only if the Streaming_TemporalStrategy is either {Delta, ROI}
; In these temporal strategies, the key frame gap indicates that every Nth frame sent
; to the client will be the whole frame and not a differential / ROI frame. This is useful
; for error resilience in case intermediate frames get dropped during transmission. It also
; serves to debug on the client side, where every so often you can examine the whole images
; being received.
Streaming_KeyFrameGap=20

; Check if the rendering of each view the same as that of the previously sent frame
; for that view and
;   (a) report it to the log so that the server code may be modified to avoid
;       such a render needlessly,
;   (b) avoid streaming this view to the client
Streaming_CheckIfDifferent=false

; Maximum number of encoder threads. This is relevant only if Streaming_Encode is non-zero
; Default number of threads is number of logical CPUs on the machine. However this may be
; clamped. This number should be >= 1
; Also see Global_MaxThreads below.
Streaming_MaxEncoderThreads=3

; Maximum number of threads that can be spawned across whole ProServer workflow:
; Currently includes VTK and ITK via:
;    vtkMultiThreader::SetGlobalMaximumNumberOfThreads(N); 
;    itk::MultiThreader::SetGlobalMaximumNumberOfThreads(N); 
; This will also clamp the encoder threads e.g. 
; Streaming_MaxEncoderThreads=min(Streaming_MaxEncoderThreads, Global_MaxThreads)
Global_MaxThreads=8

; Display Render number, FPS, FPS Mean, Time from prev to current frame and transmitted data
; statistics per view
Annotation_DisplayCornerTxFPS=false

; Export CSV file for latency performance benchmark
LatencyBenchmark=true
LatencyBenchmarkFileName=/inst/staging-a-3/AppData/logs/

; Write every Nth rendered image of every view to a file on the server side for debugging ?
; Output format is of the form: "View2_Render_00200.png", which implies that it is the 200th
; rendered image of the view with index 2. Note that this is the rendered image and not the
; transmitted image.
Debug_WriteRenderedImages=false

; Write every Nth rendered image of every view to a file on the server side for debugging ?
; Output format is of the form: "View2_Tx_00200.png", which implies that it is the 200th
; transmitted image of the view with index 2. If the transmission mode is {Whole}, or if
; the Debug_WriteImageGap is divisble by the Streaming_KeyFrameGap, then this image will
; be the same as the rendered image.
Debug_WriteTransmittedImages=false

; Value of N above. This is relevant only if Debug_WriteRenderedImages=true.
; Note that this will introduce slowness in the server, particularly for smaller
; values of WriteImageGap. It is very handy to debug, particuarly in headless server mode.
; This value must be >= 1
Debug_WriteImageGap=50



;Activation of Maintainence thread to kill unwanted jobs
;value is in minutes after which thread gets activated
KILL_PROSERVER_UNWANTED_JOBS_THREAD_ACTIVATION=120

; Compute buffer generation statistics
; Contains ViewIndex, RenderNumber, Input_RenderWindow_size, BufferType (RGB/RGBA),
; Output_Size (may be smaller for ROI or Delta), Time taken to grab whole / compute ROI/delta.
; For this Log_Verbosity must be greater >= 1
Debug_WriteBufferGenerationStats=true

; EVServer log filename
Log_Filename=EVServerLog.txt

; EVServer log versbosity. Integer with one of these values. (Use -9 for off)
;  VERBOSITY_OFF = -9 , VERBOSITY_ERROR = -2 , VERBOSITY_WARNING = -1 ,
;  VERBOSITY_INFO = 0 , VERBOSITY_0 = 0 , VERBOSITY_1 = +1 , VERBOSITY_2 = +2 ,
;  VERBOSITY_3 = +3 , VERBOSITY_4 = +4 , VERBOSITY_5 = +5 , VERBOSITY_6 = +6 ,
;  VERBOSITY_7 = +7 , VERBOSITY_8 = +8 , VERBOSITY_9 = +9 , VERBOSITY_TRACE = +9 ,
;  VERBOSITY_MAX = +9
;  EBLOG_DEBUG=+6, EBLOG_TRACE=+8
Log_Verbosity=8

; EVServer Log_ Truncate or append the log with every server execution ?
; 0 for truncate, 1 for append
Log_Initialization=0

; DICOM_SERVER_SETTINGS
; The top level directory to store DICOM files, e.g. Inst\prod-a-2\AppData
; Images data folder, must exist
DICOM_OUTPUT_ROOT_DIRECTORY=/inst/staging-a-3/AppData/

; slice count needed for creation of nrrd file Volume.nrrd in derived series path
DICOM_STORE_SLICE_COUNT=40

; periodic timer in seconds for carrying out DICOM Store post process activities
AUTO_BATCH_TIMER=30

; time out in seconds for figuring out that no more DICOM files are to be received in current association
DICOM_STORE_POST_PROCESS_TIMEOUT=30

; DICOM_Server log rolling schedule
; MONTHLY = 0
; WEEKLY = 1
; DAILY = 2
; TWICE_DAILY = 3
; HOURLY = 4
; MINUTELY = 5
DICOM_SERVER_LOG_ROLLING_SCHEDULE=2

; DICOM_Server log max number of files to be backed up
DICOM_SERVER_LOG_MAX_BACKUP_COUNT=30

; DICOM_Server log level
; dcmtk::log4cplus::OFF_LOG_LEVEL = 60000 = The OFF_LOG_LEVEL LogLevel is used during configuration to turn off logging.
; dcmtk::log4cplus::FATAL_LOG_LEVEL = 50000 = The FATAL_LOG_LEVEL LogLevel designates very severe error events that will presumably lead the application to abort. More...
; dcmtk::log4cplus::ERROR_LOG_LEVEL = 40000 = The ERROR_LOG_LEVEL LogLevel designates error events that might still allow the application to continue running.
; dcmtk::log4cplus::WARN_LOG_LEVEL = 30000  = The WARN_LOG_LEVEL LogLevel designates potentially harmful situations.
; dcmtk::log4cplus::INFO_LOG_LEVEL = 20000  = The INFO_LOG_LEVEL LogLevel designates informational messages that highlight the progress of the application at coarse-grained level.
; dcmtk::log4cplus::DEBUG_LOG_LEVEL = 10000 = The DEBUG_LOG_LEVEL LogLevel designates fine-grained informational events that are most useful to debug an application.
; dcmtk::log4cplus::TRACE_LOG_LEVEL = 0     =     The TRACE_LOG_LEVEL LogLevel is used to "trace" entry and exiting of methods.
; dcmtk::log4cplus::ALL_LOG_LEVEL = TRACE_LOG_LEVEL = The ALL_LOG_LEVEL LogLevel is used during configuration to turn on all logging.
; dcmtk::log4cplus::NOT_SET_LOG_LEVEL = -1  = The NOT_SET_LOG_LEVEL LogLevel is used to indicated that no particular LogLevel is desired and that the default should be used.
DICOM_SERVER_LOG_LEVEL=20000

; EVServer storage root path prefix
; /inst/<INSTANCE NAME>/AppData/workingstorage/
Storage_Path=/inst/staging-a-3/AppData
Database_host=staging-a-3.ad.elucid.biz
Database_Username=root
Database_Name=elucid

; Bypass database until it is functional ?
Database_bypass=false

; ** Volume rendering (Volumetric Ray Tracing) options

; FPS for Volume rendering during interaction. Larger values will reduce
; quality at the expense of interactivity. Because VRT is more complex than
; the 2D view, we set a custom number here that is allowed to be different than
; the Interactive FPS for all views in general. The FPS set here will apply to the
; 3D view alone and only when it has VRT turned ON.
Render_VRT_FPS=15.0

; LOD adjustment based on set FPS for Volume rendering ?
; If set to true we adjust sample distance (Sample distance along the ray) based
; on whether the render is interactive or still. Interactive renders use the FPS mentioned
; above while still renders are given an infinite amount of time to render.
Render_VRT_InteractiveAdjustSampleDistances=true

; Overall motion sensitivity (for all views and camera operations). Values here are
; scaled by the viewport size and should be interpreted as a factor. Larger values will
; lead to larger camera manipulations.
View_MotionFactor=10.0

; Mouse motion sensitivity for slicing. Applied on top of overall motion sensitivity.
; Larger values cause more slicing
View2D_SliceSensitivity=1.0

; Mouse motion sensitivity for scrolling. Applied on top of overall motion sensitivity
; Larger values cause more scrolling
View2D_ScrollSensitivity=1.0

; Render only the current 2D view ? (false) [fast]
;          vs
;        Render all 2D views ? (true) [slow]
; in response to a window level interaction.
View2D_InteractiveSynchronizedWindowLevel=false
View2D_InteractiveSynchronizedZoom=false

;
; Configuration for EVDICOMImportServer
;
; Directory for EVDICOMImportServer to watch for files uloaded by Client.
DICOM_LOCAL_WATCH_DIRECTORY=/inst/staging-a-3/AppData/ImportData

; DICOM_Import log level
; Global = 1 = Generic level that represents all the levels. Useful when setting global configuration for all levels
; Trace = 2 = Information that can be useful to back-trace certain events - mostly useful than debug logs
; Debug = 4 = Informational events most useful for developers to debug application
; Fatal = 8 = Severe error information that will presumably abort application
; Error = 16 = Information representing errors in application but application will keep running
; Warning = 32 = Useful when application has potentially harmful situations
; Verbose = 64 = Information that can be highly useful and vary with verbose logging level
; Info = 128 = Mainly useful to represent current progress of application
; Unknown = 1010 = Represents unknown level
DICOM_IMPORT_LOG_LEVEL=1

; Server side log location
SERVER_LOG_FILE_PATH=/inst/staging-a-3/AppData/logs

PATH_TO_DCMTK_BIN=/inst/adler/EVServer-Release-OnScreen/DCMTK-build/bin
DEST_DICOM_SERVER_HOST_NAME=10.232.160.191
HOST_IP_ADDRESS=10.232.160.191

; Disable HRP annotations for a certain product version.
; Enable will show them again
ShowHRPAnnotations=true

; Disable PVAT annotations for a certain product version.
; Enable will show them again
ShowPVATAnnotations=true

; Disable IPH annotations for a certain product version.
; Enable will show them again
ShowIPHAnnotations=true

; Show Plaque burden annotation on probe
ShowPlaqueBurdenAnnotations=true

; Result view read only review mode ? or Analysis mode ?
; Supported options 'Review' or 'Analysis'
UsageMode=Analysis

; Render FFR Color bar on the server
ShowFFRColorBar=true

; Export CSV file for latency performance benchmark
;LatencyBenchmark=true
;LatencyBenchmarkFileName=LatencyBenchmark.csv

; Use full lumen area to render the cross section flow
FullCrossSectionFlow=true

; Render the cursor for the region of interest representation on the backend
RenderCursorOnBackEnd=true

; Default number of vessel geometry smoothing iterations
DefaultVesselSmoothingIterations=10

; Number of lumen geometry smoothing iterations in report mode
LumenReportSmoothingIterations=20

;Flag to run using threads in ebiMultiImageReader 
IO_MultiImageReader_Thread=true

; Show text widget for Cran and LAO based on the options. True shows
; the widget and False hides it.
ShowCranLAOWidget=true

; WARNING: Settign this to true will cause massive slowdown. Shows the
; memory usage in logs. The memory shows the total memory used and if
; memory is added shows the memory added during the scope of the ebLog
; object.
LogPrintMemory=false

; Window level used for the oblique 2D lesion report images
ReportImageWindow=984
ReportImageLevel=243

; PKI public/private keys cryptographic
; DB password encrypted
RSAPrivateKeyPath=/inst/KEY_HOST_NAME/EVServer/certs/rsa_privateKey.pem
Database_Password=DZXjTR32PmVtfrXjW19z7g==,YW4J7qok2Pl13j8awq3FWfMmoEiMBnxG7DodnL44MgK6pW4ukDHxhqJVSDmEbpztk2ZSpw+6ppIJhB0vzEkgJGeuO9IfNxv0e+iaYrSO+ifQZ8KBHTkcSriVEZ4Z4aVifAV73LcpiZBE5Pv/mXMoGTmy1gk3KpTRpTvpUldct+i2NJG+O2opJGAIrYRQpYu1NGkNx684wUTs9GY5TcA1qOx0wgc1vzFRf6lJz/B5QJqwPeKv35ARBOOQws3XpyUoDUuHKTATMaizuWGWW9sruuvvICxa1UIUnfRKtmCiLdPgI+a/ElmtQbGuggS6CliUPvvMRFXtnZQtffRSTBQ8nQ==,Da0+v6GV/0lzF8nkvSK/Og==


; A comma separated string of jurisdictions showing the aortic surface, for instance -
; JurisdictionsSupportingAorticSurfaceDisplay=vascuCAP-RE,FDA
; JurisdictionsSupportingAorticSurfaceDisplay=vascuCAP-RE
JurisdictionsSupportingAorticSurfaceDisplay=vascuCAP-RE

; Default resetCamera setting for overview Snapshot
OverviewSnapShotResetCamera=false

; CSV string specifying the GPU devices that can be used
; Only used when OverrideAutomaticGpuSelection is true
ValidGpus=0,1,2,3,4,5,6,7
; When true, the GPU device is selected randomly from ValidGpus
OverrideAutomaticGpuSelection=false
; Maximum number of GPUs on the system to be used
NumberOfValidGpus=20
; When true, all rendering for this proserver instance will be done on a single GPU
OneGpuPerProserverInstance=false

; Enable HybridCrosshairRendering support across selected stages of the application ?
;
; HybridCrosshairRendering causes the server to send the cross-hair endpoints in display coordinates and 
; their colors over to the client via a subscription channel titled _____. The client may choose to listen
; on this channel and render the cross-hair on the front end. This allows the server to optimize the
; bandwidth of data sent. For instance we can avoid the transmission of the coronal and sagittal views when
; the axial view is scrolled since the only thing that changes on the Coronal and Sagittal views is the crosshair
; reference line.
; Below, one will set the stages on which HybridCrosshairRendering is supported. 
; This can be multivalued of the form Preview or Preview;Definition etc.
; If set to None, HybridCrosshairRendering is off.
; mode: None, Analysis, Review, Report, Preview, Definition
HybridCrosshairRendering=None


; Close Event Tolerances
; As an optimization, we do not process interaction events that are "too close."
; Events that 1) have the same button states and 2) have a euclidean distance less 
; than CloseEventSpatialTol - in display units - and 3) have a temporal difference
; less than CloseEventsemporalTol are considered too close and not processed.
; *normalized display units* - think as percent of window 
CloseEventSpatialTol=.02
; *seconds* 
CloseEventTemporalTol=.5

; Seg Editing Tolerances 
; Similarly, we filter out interactions when editing. 
; This is on a per tool basis and for the paintbrush tool we can deduce it 
; from the paintbrush size. During seg editing, we will set CloseEventSpatialTol to 0
; to enable these finer-grained tolerances. 
; *normalized display units* 
CloseEventSpatialTol_ProjectedContour=.02
CloseEventSpatialTol_ImageFill=.005
CloseEventSpatialTol_SegFill=.005
; To limit large memory requirements, only 5 undos buffers
; are allowed. This can be changed in the future by the parameter 
; MAX_SEG_EDIT_UNDO
MAX_SEG_EDIT_UNDO=5
; Size of Caption Widget Font.
CaptionWidgetFontSize=12

; Min and max zoom factor in the 3d view
; A max zoom factor of 10 means you can zoom in 10x the diagonal length of the 
; vessel bounding box
; A min zoom factor of 0.75 means you can zoom out a max of 0.75x the diagonal 
; length of the image
; Max zoom is set to a large value to effectively give infinite zoom in
3dMaxZoomFactor=100000000
3dMinZoomFactor=0.75                                                            
                                                                                
; How far outside the vessel bounds the camera can move in the 3d view
; A pan factor of 1.0 means the furthest you can pan is 1x diagonal length of 
; the vessel bounding box
3dPanFactor=1.0 


; In review/analysis view, we focus the Axial view on the heart. This is the
; percentage of padding we expand this view.
AxialViewInitPadding=0.10

; Min and max diagonal distance for the 2d view in millimiters
2dMaxDiagonalDistance=350
2dMinDiagonalDistance=0.5
                                                                                
; How far outside the vessel bounds the camera can move in the 2d view          
; A pan factor of 1.0 means the furthest you can pan is 1x the diagonal length
; of the image
2dPanFactor=1.0 

; Determines if panning on the 2D cross-sectional oblique view is allowed
ObliquePanningEnabled=true

; After how many scrolls should we render the other views? EndMouseWheel
; will not respect this so that after a scroll event, all views represent the 
; synced Scene. 
; A reasonable value is probably 5. A value of 1 will result in all views being 
; rendered on every scroll. It cannot be less than 1.
2dScrollLinkedRenderInterval=1

; Overview images DPI resolution factor
PrintDPIScaleFactor=4


; Enable/Disable Double Oblique Feature
DoubleObliqueEnabled=false

; Indicates whether Hardware Accelerated Image Encoding
; 0 = No hardware accelerated encoding
; 1 = Nivida JPEG encoding
HWAcceleratedImageEncoding=0


StraightenedCPRNewImplementation=true